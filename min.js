const t=({tag:t,...e})=>{let n={},r={},o={};Object.entries(e).forEach((([t,e])=>t.startsWith("__")?n[t.substring(2)]=e:t.startsWith("_")?r[t.substring(1)]=e:o[t]=e));const s=document.createElement(t||"div");Object.entries(o).forEach((([t,e])=>s.setAttribute(t.replace(/_/g,"-"),e)));const i=t=>s.addEventListener(...t);return Object.entries(n).forEach((t=>{i(["mount",()=>window.addEventListener(...t)]),i(["unmount",()=>window.removeEventListener(...t)])})),Object.entries(r).forEach(i),s};let e={},n={},r=0,o=[-1];const s=(t,e)=>t.dispatchEvent(new Event(e)),i=()=>"n"+o.join("n"),a=t=>{const s=[...o],a=i(),u=a+"s"+r++;n[u]=n[u]??t;const l=()=>{o=[...s],o[o.length-1]--,c(...e[a],!0)};return{set value(t){n[u]=t,l()},get value(){return n[u]},signal:l}},c=(n,u,l)=>{if(!n?.nodeType||void 0===u)return;if("function"==typeof u)return c(n,{tag:u},l);if(Array.isArray(u))return u.forEach((t=>c(n,t)));if(o[o.length-1]++,null===u||!1===u)return;if("object"!=typeof u)return n.append(u);const d="function"==typeof u?.tag,f=i();d&&(r=0);const h=d?u.tag({ref:()=>e[f][0],store:a,...u}):u,{c:p,...g}=Array.isArray(h)?{tag:"span",c:h}:h;let E=null;if(l){const e=n.parentNode,r=[...e.children].indexOf(n);s(n,"unmount"),n.querySelectorAll("*").forEach((t=>s(t,"unmount"))),e.replaceChild(t(g),n),E=e.children[r]}else n.append(t(g)),E=n.lastChild;d&&(e[f]=[E,u]);const v=[...o];o.push(-1),c(E,p),s(E,"mount"),o=[...v]};export{c as default};
