const t=({tag:t,html:e,...n})=>{let r={},i={},o={};Object.entries(n).filter((([t,e])=>void 0!==e)).forEach((([t,e])=>t.startsWith("__")?r[t.substring(2)]=e:t.startsWith("_")?i[t.substring(1)]=e:o[t]=e));const s=document.createElement(t||"div");void 0!==e&&(s.innerHTML=e),Object.entries(o).forEach((t=>s.setAttribute(...t)));const c=t=>s.addEventListener(...t);return Object.entries(r).forEach((t=>{c(["mount",()=>window.addEventListener(...t)]),c(["unmount",()=>window.removeEventListener(...t)])})),Object.entries(i).forEach(c),s};let e={},n=[-1];const r=(t,e)=>t.dispatchEvent(new Event(e)),i=(o,s,c)=>{if(!o?.nodeType||void 0===s)return;if("function"==typeof s)return i(o,{tag:s},c);if(Array.isArray(s))return s.forEach((t=>i(o,t)));if(n[n.length-1]++,null===s||!1===s)return;if("object"!=typeof s)return o.append(s);let a,l=0;const u="function"==typeof s?.tag?s.tag({self:()=>a,store:t=>{const r=n.slice(0),o="n"+n.join("n")+"p"+l++;return e[o]=e[o]??t,t=>void 0===t?e[o]:(e[o]=t,n=r.slice(0),n[n.length-1]--,i(a,s,!0))},...s}):s,{c:d,...f}=u?.constructor===Object?u:{tag:"span",c:u};if(c){const e=o.parentNode,n=[...e.children].indexOf(o);r(o,"unmount"),o.querySelectorAll("*").forEach((t=>r(t,"unmount"))),e.replaceChild(t(f),o),a=e.children[n]}else o.append(t(f)),a=o.lastChild;const h=n.slice(0);n.push(-1),i(a,d),r(a,"mount"),n=h.slice(0)};export{i as default};
